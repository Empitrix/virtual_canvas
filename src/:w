#include "../structs.h"
#include <ctype.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

/*   c  r   b   b   w    h   m
min: A 000 000 000 0000 0000 0
max: A 255 255 255 9999 9999 1
exmaple: A255255255111122220
totla len: 19*/ 

struct COMMAND_ONE get_command_one(char ord[]){
	struct COMMAND_ONE com;
	int l = (int)strlen(ord);
	int i, c;

	char holder[1000];
	int h;


	if(l != 19){
		printf("ERROR: LENGTH ERROR, %i\n", l);
		com.ecode = 1;
		return com;
	}  // broken order

	com.bg_color.a = 255;

	h = c = i = 0;

	while(ord[i] != '\0'){
		if(i == 0 ){ ++i; continue; }
		c = ord[i];
		holder[h] = c;

		if(!isdigit(c)){
			printf("ERROR: NON DIGIT, %c\n", c);
			com.ecode = 1;
			return com;
		}

		if(!com.bg_color.r && h == 3){
			com.bg_color.r = atoi(holder);        // bg color - red
			h = 0;
		} else if(!com.bg_color.g && h == 3){
			com.bg_color.g = atoi(holder);        // bg color - green
			h = 0;
		} else if(!com.bg_color.b && h == 3){
			com.bg_color.b = atoi(holder);        // bg color - blue
			h = 0;
		} else if (!com.width && h == 4){
			com.width = atoi(holder);             // width
			h = 0;
		} else if (!com.height && h == 4){
			com.height = atoi(holder);            // height
			h = 0;
		} else {
			if(atoi(holder) == 0)                 // color mode (MONO)
				com.mode = MONO;
			else                                  // color mode (FULL)
				com.mode = FULL;
			break;
		}
		++i;
		++h;
	}

	com.ecode = 0;
	return com;
}

